package com.flippy.fl.business{	/**	 *	 */	import flash.events.*;	import flash.net.*;		import mx.rpc.IResponder;		import com.flippy.fl.model.FlippyModelLocator;		/**	 * Instantiate once, because the instance is stored as singleton in Main model	 * 	 * @author Hendra	 * 	 */		public class QuestionDelegate	{			/**		* 		*/		private var model : FlippyModelLocator = FlippyModelLocator.getInstance();				/**		* 		*/				private var responder : IResponder;				/**		* 		*/				private var service : Object;				/**		*  ref to model.main.businessNc		*/				private var netConnection : NetConnection = model.main.businessNc;				/**		 * 		 * @param res		 */				public function QuestionDelegate( res : IResponder )		{								// Listen and capture the NetConnection info and error events.			responder = res;		}				/**		 * 		 * @param uri		 * @param proxy		 * @param encoding		 */				public function submit( sessionId: String, userName:String, question:String) : void		{			var respWrapper:Responder = new Responder(onResult, onStatus);			model.main.businessNc.call("question.submit", respWrapper, sessionId, userName, question);		}				/*********************		 * RESPONDER WRAPPER 		 		 *********************/				private function onResult(object:Object):void {			var obj:Object = new Object();			obj.result = object;			responder.result(obj);		}		private function onStatus(object:Object):void {						responder.fault(object);		}    }}