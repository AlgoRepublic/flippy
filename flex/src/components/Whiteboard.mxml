<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:paper="components.*" creationComplete="init()" width="946" height="336">
	<mx:Script>
		<![CDATA[
			import mx.controls.Image;
			import mx.controls.NumericStepper;
			import mx.events.ListEvent;
			import mx.controls.ComboBox;
			import mx.events.NumericStepperEvent;
			import mx.events.ColorPickerEvent;
			import mx.core.UIComponent;
			import mx.collections.ArrayCollection;
			import mx.controls.Button;
			private var tools:ArrayCollection;
			private var thicknessOptions:Array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
			
			// shared object
			private var nc:NetConnection = null;
			private var mySo:SharedObject = null;
			private var rtmpUrl:String = "rtmp://localhost/SOSample";
			
			public function set serverUrl(url:String):void
			{
				rtmpUrl = url;
			}
			
			public function get serverUrl():String
			{
				return rtmpUrl;
			}
			
			public function connect():void
			{
				nc = new NetConnection();
				nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
				
				trace("Connecting to server using '" + rtmpUrl + "' ...");
				nc.connect(rtmpUrl);
				
				trace("Getting remote object from " + nc.uri);
				mySo = SharedObject.getRemote("whiteboard", nc.uri);
				mySo.addEventListener(SyncEvent.SYNC, soSyncHandler);
			}
			
			public function disconnect():void
			{
				if (mySo != null)
				{
					mySo.close();
				}
				if (nc != null)
				{
					nc.close();
				}
			}
			
			private function netStatusHandler(event:NetStatusEvent):void
			{
				trace("nc:" + event.info.code + " - " + event.info.description);
				if (event.info.code == "NetConnection.Connect.Success")
				{
					trace("Connected");
					trace("Create connection to shared object...");
					mySo.connect(nc);
					drawPaper.drawablesSharedObject = mySo;
				}
			}
			
			private function soSyncHandler(event:SyncEvent):void
			{
				trace("Sync Event");
				var changeList:Array = event.changeList;
				for (var i:int = 0; i < changeList.length; i++)
				{
					var info:Object = changeList[i];
					trace("changed object [" + i + "]:name='" + info.name + "', code='" + info.code + "'"); 
				}
				
				for (var p:Object in mySo.data)
				{
					trace("slotName='" + p + "', slotValue='" + mySo.data[p] + "'");
				}
				drawPaper.repaintDrawables();
			}
			
			
			private function init():void {
				tools = new ArrayCollection([rectangleTool, ovalTool, lineTool, penTool]);
				connect();
			}
			
			private function selectATool(tool:Button):void {
				var arr:Array = tools.source;
				for (var i:int = 0; i < arr.length; i++) {
					if (arr[i] != tool) {
						(arr[i] as Button).selected = false;
					}
				}
				tool.selected = true;
				drawPaper.tool = tool.id;
			}
			
			private function strokeColorChanged(event:ColorPickerEvent):void
			{
				drawPaper.strokeColor = event.color;
			}
			
			private function fillColorChanged(event:ColorPickerEvent):void
			{
				drawPaper.fillColor = event.color;
			}
			
			private function fillAlphaChanged(event:NumericStepperEvent):void
			{
				drawPaper.fillAlpha = event.value / 100;
			}
			
			private function strokeThicknessChanged(event:NumericStepperEvent):void
			{
				drawPaper.strokeThickness = event.value;
				
			}
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%" borderColor="#B2AFAF" borderThickness="1" borderStyle="solid">
		<mx:ApplicationControlBar width="100%">
			<mx:HBox>
				<mx:Label text="Stroke"/>
				<mx:ColorPicker change="strokeColorChanged(event)"/>
			</mx:HBox>
			<mx:Spacer/>
			<mx:HBox>
				<mx:Label text="Fill"/>
				<mx:ColorPicker change="fillColorChanged(event)"/>
				<mx:CheckBox id="fillColorCheck" change="drawPaper.opaque = !fillColorCheck.selected"/>
			</mx:HBox>
			<mx:Spacer/>
			<mx:HBox>
				<mx:Label text="Alpha"/>
				<mx:NumericStepper width="53" value="100" stepSize="1" minimum="0" maximum="100" change="fillAlphaChanged(event)"/>
			</mx:HBox>
			<mx:Spacer/>
			<mx:HBox>
				<mx:Label text="Thickness"/>
				<mx:NumericStepper width="53" value="1" stepSize="1" minimum="1" maximum="10" change="strokeThicknessChanged(event)"/>
			</mx:HBox>
			<mx:Button id="rectangleTool" selected="true" click="selectATool(rectangleTool)" icon="@Embed(source='../assets/rectangle tool.svg')" height="29" label="Rectange" textAlign="left"/>
			<mx:Button id="ovalTool" click="selectATool(ovalTool)" height="29" icon="@Embed(source='../assets/oval tool.svg')" label="Oval" textAlign="left"/>
			<mx:Button id="lineTool" click="selectATool(lineTool)" height="29" icon="@Embed(source='../assets/line tool.svg')" label="Line" textAlign="left"/>
			<mx:Button id="penTool" click="selectATool(penTool)" height="29" icon="@Embed(source='../assets/pen tool.svg')" label="Pen" textAlign="left"/>
			<mx:Button id="clearTool" click="drawPaper.clear()" height="29" icon="@Embed(source='../assets/eraser tool.svg')" label="Erase All" textAlign="left"/>
		</mx:ApplicationControlBar>
		<mx:HBox width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
			<paper:Paper id="drawPaper" width="100%" height="100%" focusEnabled="true">
			</paper:Paper>
		</mx:HBox>
	</mx:VBox>
		
</mx:HBox>
